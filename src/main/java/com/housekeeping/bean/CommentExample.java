package com.housekeeping.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public CommentExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCNoIsNull() {
            addCriterion("c_no is null");
            return (Criteria) this;
        }

        public Criteria andCNoIsNotNull() {
            addCriterion("c_no is not null");
            return (Criteria) this;
        }

        public Criteria andCNoEqualTo(Integer value) {
            addCriterion("c_no =", value, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoNotEqualTo(Integer value) {
            addCriterion("c_no <>", value, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoGreaterThan(Integer value) {
            addCriterion("c_no >", value, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("c_no >=", value, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoLessThan(Integer value) {
            addCriterion("c_no <", value, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoLessThanOrEqualTo(Integer value) {
            addCriterion("c_no <=", value, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoIn(List<Integer> values) {
            addCriterion("c_no in", values, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoNotIn(List<Integer> values) {
            addCriterion("c_no not in", values, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoBetween(Integer value1, Integer value2) {
            addCriterion("c_no between", value1, value2, "cNo");
            return (Criteria) this;
        }

        public Criteria andCNoNotBetween(Integer value1, Integer value2) {
            addCriterion("c_no not between", value1, value2, "cNo");
            return (Criteria) this;
        }

        public Criteria andDNoIsNull() {
            addCriterion("d_no is null");
            return (Criteria) this;
        }

        public Criteria andDNoIsNotNull() {
            addCriterion("d_no is not null");
            return (Criteria) this;
        }

        public Criteria andDNoEqualTo(String value) {
            addCriterion("d_no =", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoNotEqualTo(String value) {
            addCriterion("d_no <>", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoGreaterThan(String value) {
            addCriterion("d_no >", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoGreaterThanOrEqualTo(String value) {
            addCriterion("d_no >=", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoLessThan(String value) {
            addCriterion("d_no <", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoLessThanOrEqualTo(String value) {
            addCriterion("d_no <=", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoLike(String value) {
            addCriterion("d_no like", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoNotLike(String value) {
            addCriterion("d_no not like", value, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoIn(List<String> values) {
            addCriterion("d_no in", values, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoNotIn(List<String> values) {
            addCriterion("d_no not in", values, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoBetween(String value1, String value2) {
            addCriterion("d_no between", value1, value2, "dNo");
            return (Criteria) this;
        }

        public Criteria andDNoNotBetween(String value1, String value2) {
            addCriterion("d_no not between", value1, value2, "dNo");
            return (Criteria) this;
        }

        public Criteria andUNoIsNull() {
            addCriterion("u_no is null");
            return (Criteria) this;
        }

        public Criteria andUNoIsNotNull() {
            addCriterion("u_no is not null");
            return (Criteria) this;
        }

        public Criteria andUNoEqualTo(String value) {
            addCriterion("u_no =", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoNotEqualTo(String value) {
            addCriterion("u_no <>", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoGreaterThan(String value) {
            addCriterion("u_no >", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoGreaterThanOrEqualTo(String value) {
            addCriterion("u_no >=", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoLessThan(String value) {
            addCriterion("u_no <", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoLessThanOrEqualTo(String value) {
            addCriterion("u_no <=", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoLike(String value) {
            addCriterion("u_no like", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoNotLike(String value) {
            addCriterion("u_no not like", value, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoIn(List<String> values) {
            addCriterion("u_no in", values, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoNotIn(List<String> values) {
            addCriterion("u_no not in", values, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoBetween(String value1, String value2) {
            addCriterion("u_no between", value1, value2, "uNo");
            return (Criteria) this;
        }

        public Criteria andUNoNotBetween(String value1, String value2) {
            addCriterion("u_no not between", value1, value2, "uNo");
            return (Criteria) this;
        }

        public Criteria andCDateIsNull() {
            addCriterion("c_date is null");
            return (Criteria) this;
        }

        public Criteria andCDateIsNotNull() {
            addCriterion("c_date is not null");
            return (Criteria) this;
        }

        public Criteria andCDateEqualTo(Date value) {
            addCriterionForJDBCDate("c_date =", value, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("c_date <>", value, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateGreaterThan(Date value) {
            addCriterionForJDBCDate("c_date >", value, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("c_date >=", value, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateLessThan(Date value) {
            addCriterionForJDBCDate("c_date <", value, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("c_date <=", value, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateIn(List<Date> values) {
            addCriterionForJDBCDate("c_date in", values, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("c_date not in", values, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("c_date between", value1, value2, "cDate");
            return (Criteria) this;
        }

        public Criteria andCDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("c_date not between", value1, value2, "cDate");
            return (Criteria) this;
        }

        public Criteria andCContentIsNull() {
            addCriterion("c_content is null");
            return (Criteria) this;
        }

        public Criteria andCContentIsNotNull() {
            addCriterion("c_content is not null");
            return (Criteria) this;
        }

        public Criteria andCContentEqualTo(String value) {
            addCriterion("c_content =", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentNotEqualTo(String value) {
            addCriterion("c_content <>", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentGreaterThan(String value) {
            addCriterion("c_content >", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentGreaterThanOrEqualTo(String value) {
            addCriterion("c_content >=", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentLessThan(String value) {
            addCriterion("c_content <", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentLessThanOrEqualTo(String value) {
            addCriterion("c_content <=", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentLike(String value) {
            addCriterion("c_content like", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentNotLike(String value) {
            addCriterion("c_content not like", value, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentIn(List<String> values) {
            addCriterion("c_content in", values, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentNotIn(List<String> values) {
            addCriterion("c_content not in", values, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentBetween(String value1, String value2) {
            addCriterion("c_content between", value1, value2, "cContent");
            return (Criteria) this;
        }

        public Criteria andCContentNotBetween(String value1, String value2) {
            addCriterion("c_content not between", value1, value2, "cContent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated do_not_delete_during_merge Fri Mar 05 10:54:27 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated Fri Mar 05 10:54:27 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}